#textdomain wesnoth-High_Seas_Era

#define USE_HSE_RAID_SPOTS_SYSTEM
[event]
name=prestart
  {VARIABLE raid_spot_exits_x_list 0}
  {VARIABLE raid_spot_exits_y_list 0}
[/event]

[event]
name=moveto
first_time_only=no
[filter]
  x=$raid_spot_exits_x_list
  y=$raid_spot_exits_y_list
[/filter]
  {HSE_FIND_CLOSEST_HEX landing_x landing_y $raid_spot_x_from_id_$hex_owner_id_$x1|_$y1||| $raid_spot_y_from_id_$hex_owner_id_$x1|_$y1||| ([not]
  [filter]
  [/filter]
[/not]) (terrain={OBSTRUCTING_TERRAINS}) 20}
  {IF_VAR landing_x greater_than 0 ([then]
    [store_unit]
      [filter]
        x=$x1
        y=$y1
      [/filter]
      kill=yes
      variable=leaver
    [/store_unit]
    {VARIABLE leaver.x $landing_x}
    {VARIABLE leaver.y $landing_y}
    [unstore_unit]
      variable=leaver
    [/unstore_unit]
    {HSE_COMPLETE_MOVETO $landing_x $landing_y}
  [/then])}
[/event]

[event]
name=side turn
first_time_only=no
  [store_locations]
    x=$raid_spot_exits_x_list
    y=$raid_spot_exits_y_list
    variable=exits
  [/store_locations]
  {FOREACH exits uhrss_i}
    {IF_VAR exits[$uhrss_i].x greater_than 0 ([then]
      [label]
        text=_"Exit"
        x=$exits[$uhrss_i].x
        y=$exits[$uhrss_i].y
      [/label]
    [/then])}
  {NEXT uhrss_i}
[/event]
#enddef

#define PLACE_RAID_SPOT X Y ID RAID_MENU_ITEM_DESC RAID_MENU_ITEM_IMAGE APPEARS_IMMEDIATELY INTERIOR_MAP_WITH_VOID_BORDER INTERIOR_MAP_RADIUS_INCLUDING_ONE_VOID INTERIOR_MAP_CENTER_X_WHICH_MUST_BE_EVEN INTERIOR_MAP_CENTER_Y ENTRANCE_X_ON_MASK ENTRANCE_Y_ON_MASK INTERIOR_PLACE_FUNC
{VARIABLE hseprs_appears_immediately {APPEARS_IMMEDIATELY}}
[set_variables]
  name=actually_place_raid_spot_{ID}
  mode=replace
  [literal]
{VARIABLE raid_spot_has_been_placed_{ID} true}
{VARIABLE hseprs_x {X}}
{VARIABLE hseprs_y {Y}}
{VARIABLE hseprs_id {ID}}
{VARIABLE raid_spot_id_from_xy_$hseprs_x|_$hseprs_y| $hseprs_id}
{VARIABLE raid_spot_x_from_id_$hseprs_id| $hseprs_x}
{VARIABLE raid_spot_y_from_id_$hseprs_id| $hseprs_y}

{SETUP_INTERIOR_SPACE_VARS raid_spot_interior_space_from_id_$hseprs_id| ({INTERIOR_PLACE_FUNC}) () ({INTERIOR_MAP_WITH_VOID_BORDER}) ({INTERIOR_MAP_RADIUS_INCLUDING_ONE_VOID}) ({INTERIOR_MAP_CENTER_X_WHICH_MUST_BE_EVEN}) ({INTERIOR_MAP_CENTER_Y})}
{PLACE_INTERIOR_SPACE raid_spot_interior_space_from_id_$hseprs_id| $hseprs_id}

{GET_XY_FROM_MASK_XY entrance_interior_x entrance_interior_y raid_spot_interior_space_from_id_$hseprs_id| ({ENTRANCE_X_ON_MASK}) ({ENTRANCE_Y_ON_MASK})}
{VARIABLE raid_spot_exits_x_list $raid_spot_exits_x_list|,$entrance_interior_x}
{VARIABLE raid_spot_exits_y_list $raid_spot_exits_y_list|,$entrance_interior_y}
{VARIABLE raid_spot_entrance_x_from_id_$hseprs_id| $entrance_interior_x}
{VARIABLE raid_spot_entrance_y_from_id_$hseprs_id| $entrance_interior_y}
      [label]
        text=_"Exit"
        x=$entrance_interior_x
        y=$entrance_interior_y
      [/label]

  [/literal]
[/set_variables]

{IF_VAR hseprs_appears_immediately boolean_equals true ([insert_tag] # insert_tag
  name=then
  variable=actually_place_raid_spot_{ID}
[/insert_tag])}

[set_menu_item]
  id=raid_spot_{ID}
  image={RAID_MENU_ITEM_IMAGE}
  description={RAID_MENU_ITEM_DESC}
  [filter_location]
    x={X}
    y={Y}
    [filter]
      side=$side_number
    [/filter]
  [/filter_location]
  [command]
    {IF_VAR raid_spot_has_been_placed_{ID} boolean_equals true ([insert_tag] # insert_tag
      name=else # else
      variable=actually_place_raid_spot_{ID}
    [/insert_tag])}
    {VARIABLE hseprs_id $raid_spot_id_from_xy_$x1|_$y1|}
    {HSE_FIND_CLOSEST_HEX landing_x landing_y $raid_spot_entrance_x_from_id_$hseprs_id| $raid_spot_entrance_y_from_id_$hseprs_id| ([not]
  [filter]
  [/filter]
[/not]
[not]
  x=$raid_spot_entrance_x_from_id_$hseprs_id|
  y=$raid_spot_entrance_y_from_id_$hseprs_id|
[/not]) (terrain={OBSTRUCTING_TERRAINS}) 20}
    {IF_VAR landing_x greater_than 0 ([then]
      [store_unit]
        [filter]
          x=$x1
          y=$y1
        [/filter]
        kill=yes
        variable=raider
      [/store_unit]
      {VARIABLE raider.x $landing_x}
      {VARIABLE raider.y $landing_y}
      [unstore_unit]
        variable=raider
      [/unstore_unit]
      {HSE_COMPLETE_MOVETO $landing_x $landing_y}
    [/then]
    [else]
      [message]
        side_for=$side_number
        speaker=narrator
        image="units/unknown-unit.png~TC($side_number|,magenta)"
        message=_"That raid site is so packed with units that you cannot enter!"
      [/message]
    [/else])}
  [/command]
[/set_menu_item]
#enddef


