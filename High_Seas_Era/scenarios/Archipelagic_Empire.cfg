#textdomain wesnoth-High_Seas_Era

[multiplayer]
  id=high_seas_era_archipelagic_empire
  name=_"4p - EP's High Seas - Archipelagic Empires"
  description=_"What."
  map_data="usage=map
border_size=1

Xv, Xv, Xv, Xv, Xv, Xv
Xv, 1 Xv, Xv, Xv, 2 Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv
Xv, 3 Xv, Xv, Xv, 4 Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv" 
  turns=unlimited
  {DEFAULT_SCHEDULE}
  {DEFAULT_MUSIC_PLAYLIST}

  {HIGH_SEAS_ERA_PHYSICS}

#define ARCHIPELAGIC_EMPIRES_HUMAN_SIDE SIDE_NUMBER STARTING_X STARTING_Y
  [side]
    side={SIDE_NUMBER}
    controller=human
    fog=yes
    shroud=yes
  [/side]
  
  [event]
    name=prestart
    {VARIABLE archipelagic_empires_human_sides $archipelagic_empires_human_sides|,{SIDE_NUMBER}}

    [set_recruit]
      side={SIDE_NUMBER}
      recruit=Ruffian,Thug,Poacher,Footpad,Thief
    [/set_recruit]
  [/event]

  [event]
    name=archipelagic_empires_map_generation_completed
    [place_shroud]
      x=0-6
      y=0-6
      side={SIDE_NUMBER}
    [/place_shroud]

    [store_unit]
      [filter]
        side={SIDE_NUMBER}
        canrecruit=true
      [/filter]
      kill=yes
      variable=leader
    [/store_unit]
    {HSE_PLACE_INITIAL_FLAGSHIP ({SIDE_NUMBER}) ({STARTING_X}) ({STARTING_Y})}
    {VARIABLE leader.x $unit_with_interior.variables.helm_x}
    {VARIABLE leader.y $unit_with_interior.variables.helm_y}
    [unstore_unit]
      variable=leader
    [/unstore_unit]
  [/event]
  
  # MAJOR HACK - Clear a keep for us
  [event]
    name=archipelagic_empires_neutral_leaders_placed
    {CLEAR_VARIABLE closest_leader}
    {VARIABLE distance 0}
    [while]
      [not]
        [variable]
          name=closest_leader.length
          greater_than=0
        [/variable]
      [/not]
      [do]
        {VARIABLE_OP distance add 1}
        [store_unit]
          [filter]
            side=$archipelagic_empires_neutral_island_side
            [filter_location]
              x={STARTING_X}
              y={STARTING_Y}
              radius=$distance
              [filter_radius]
                [not]
                  terrain=_off^_usr
                [/not]
              [/filter_radius]
            [/filter_location]
          [/filter]
          variable=closest_leader
        [/store_unit]
      [/do]
    [/while]
    [kill]
      x=$closest_leader.x
      y=$closest_leader.y
      fire_event=no
      animate=no
    [/kill]
    [remove_shroud]
      side={SIDE_NUMBER}
      x=$closest_leader.x
      y=$closest_leader.y
      radius=2
    [/remove_shroud]
  [/event]
#enddef
#define ARCHIPELAGIC_EMPIRES_PIRATE_SIDE SIDE_NUMBER LEADER_HACK_X LEADER_HACK_Y
  [side]
    side={SIDE_NUMBER}
    allow_player=no
    no_leader=yes
    controller=ai
    fog=no
    shroud=no
    team_name=Enemies
    user_team_name=_"Enemies"
  [/side]

  [event]
    name=prestart
    {VARIABLE archipelagic_empires_pirate_side {SIDE_NUMBER}}
  [/event]

  [event]
    name=archipelagic_empires_map_generation_completed
    [unit]
      name=_"Pirates"
      side={SIDE_NUMBER}
      type=Highwayman
      x={LEADER_HACK_X}
      y={LEADER_HACK_Y}
      canrecruit=yes
    [/unit]
  [/event]
#enddef
#define ARCHIPELAGIC_EMPIRES_NEUTRAL_ISLAND_SIDE SIDE_NUMBER LEADER_HACK_X LEADER_HACK_Y
  [side]
    side={SIDE_NUMBER}
    allow_player=no
    no_leader=yes
    controller=ai
    fog=no
    shroud=no
    team_name=Enemies
    user_team_name=_"Enemies"
  [/side]

  [event]
    name=prestart
    {VARIABLE archipelagic_empires_neutral_island_side {SIDE_NUMBER}}
  [/event]

  [event]
    name=archipelagic_empires_map_generation_completed
    [unit]
      name=_"Neutral islands"
      side={SIDE_NUMBER}
      type=Outlaw
      x={LEADER_HACK_X}
      y={LEADER_HACK_Y}
      canrecruit=yes
    [/unit]

    [capture_village]
      x=1-$archipelagic_empires_map_width
      y=1-$archipelagic_empires_map_height
      side={SIDE_NUMBER}
    [/capture_village]
  [/event]
#enddef

#define ARCHIPELAGIC_EMPIRES_MONSTER_SIDE SIDE_NUMBER LEADER_HACK_X LEADER_HACK_Y
  [side]
    side={SIDE_NUMBER}
    allow_player=no
    no_leader=yes
    controller=ai
    fog=no
    shroud=no
    team_name=Monsters
    user_team_name=_"Monsters"
  [/side]

  [event]
    name=prestart
    {VARIABLE archipelagic_empires_monster_side {SIDE_NUMBER}}
  [/event]

  [event]
    name=archipelagic_empires_map_generation_completed
    [unit]
      name=_"Monsters"
      side={SIDE_NUMBER}
      type=Cuttle Fish
      x={LEADER_HACK_X}
      y={LEADER_HACK_Y}
      canrecruit=yes
    [/unit]
  [/event]
#enddef


  {ARCHIPELAGIC_EMPIRES_HUMAN_SIDE 1 1 1}
  {ARCHIPELAGIC_EMPIRES_HUMAN_SIDE 2 ($archipelagic_empires_map_width|) ($archipelagic_empires_map_height|)}
  {ARCHIPELAGIC_EMPIRES_HUMAN_SIDE 3 ($archipelagic_empires_map_width|) 1}
  {ARCHIPELAGIC_EMPIRES_HUMAN_SIDE 4 1 ($archipelagic_empires_map_height|)}
  {ARCHIPELAGIC_EMPIRES_NEUTRAL_ISLAND_SIDE 5 102 1}
  {ARCHIPELAGIC_EMPIRES_PIRATE_SIDE 6 104 1}
  {ARCHIPELAGIC_EMPIRES_MONSTER_SIDE 7 106 1}

###############################################################################################
# Random map generator
###############################################################################################

[event]
name=start
  [print]
    text=_"Generating map. This will take a while..."
    red,green,blue=255,255,255
    delay=250
    size=48
  [/print]
  [redraw]
  [/redraw]
  [replace_map]
    map="{~add-ons/High_Seas_Era/maps/100x100_Archipelagic_Empires}"
    expand=yes
  [/replace_map]
  {VARIABLE archipelagic_empires_map_width 100}
  {VARIABLE archipelagic_empires_map_height 100}

#define STORE_POTENTIAL_ISLAND_LOCATIONS TERRAIN RADIUS
{VARIABLE min_x_for_center 1}
{VARIABLE_OP min_x_for_center add {RADIUS}}
{VARIABLE min_y_for_center 1}
{VARIABLE_OP min_y_for_center add {RADIUS}}
{VARIABLE max_x_for_center $archipelagic_empires_map_width}
{VARIABLE_OP max_x_for_center add -{RADIUS}}
{VARIABLE max_y_for_center $archipelagic_empires_map_height}
{VARIABLE_OP max_y_for_center add -{RADIUS}}

[store_locations]
  x=$min_x_for_center|-$max_x_for_center
  y=$min_y_for_center|-$max_y_for_center
  [not]
    [not]
      terrain={TERRAIN}
    [/not]
    radius={RADIUS}
  [/not]
  variable=potential_island_locations
[/store_locations]
#enddef

#define FILL_WITH_ISLANDS_OF_SIZE MIN_SPACE_FILLED SIZE
  {STORE_POTENTIAL_ISLAND_LOCATIONS Wo {MIN_SPACE_FILLED}}
  
  [while]
    [variable]
      name=potential_island_locations.length
      greater_than=0
    [/variable]
    [do]
      {RANDOM 1..$potential_island_locations.length}
      {VARIABLE_OP random add -1}
      
      # Currently, STUPID islands
      [store_locations]
        x=$potential_island_locations[$random].x
        y=$potential_island_locations[$random].y
        radius={SIZE}
        variable=hexes_to_grassify
      [/store_locations]
      [store_locations]
        x=$potential_island_locations[$random].x
        y=$potential_island_locations[$random].y
        radius=1
        variable=encampment_keep_possible_locations
      [/store_locations]
      {FOREACH hexes_to_grassify i}
        [terrain]
          terrain=Gg
          x=$hexes_to_grassify[$i].x
          y=$hexes_to_grassify[$i].y
        [/terrain]
      {NEXT i}
       # NOTE - abusing the variable "random" (TODO: clean up?)
      {RANDOM 1..$encampment_keep_possible_locations.length}
      {VARIABLE_OP random add -1}
      [terrain]
        terrain=Ke
        x=$encampment_keep_possible_locations[$random].x
        y=$encampment_keep_possible_locations[$random].y
      [/terrain]

      {STORE_POTENTIAL_ISLAND_LOCATIONS Wo {MIN_SPACE_FILLED}}
    [/do]
  [/while]
#enddef

  {FILL_WITH_ISLANDS_OF_SIZE 18 5}
  {FILL_WITH_ISLANDS_OF_SIZE 10 4}
  {FILL_WITH_ISLANDS_OF_SIZE 6 3}

  # Erode

#define ARCHIPELAGIC_EMPIRES_ERODE_ONCE
  [store_locations]
    terrain=Gg
    [filter_adjacent_location]
      terrain=Gg,Ke
      count=0-3
    [/filter_adjacent_location]
    variable=erodable_locs
  [/store_locations]
  {FOREACH erodable_locs i}
    {RANDOM 1..6}
    {IF_VAR random equals 1 ([then]
      [terrain]
        terrain=Wo
        x=$erodable_locs[$i].x
        y=$erodable_locs[$i].y
      [/terrain]
    [/then])}
  {NEXT i}
#enddef

  {ARCHIPELAGIC_EMPIRES_ERODE_ONCE}
  {ARCHIPELAGIC_EMPIRES_ERODE_ONCE}
  {ARCHIPELAGIC_EMPIRES_ERODE_ONCE}
  
#define ARCHIPELAGIC_EMPIRES_UNERODE_ONCE
  [store_locations]
    terrain=Wo
    [filter_adjacent_location]
      terrain=Gg,Ke
      count=2-6
    [/filter_adjacent_location]
    variable=unerodable_locs
  [/store_locations]
  {FOREACH unerodable_locs i}
    {RANDOM 1..20}
    {IF_VAR random equals 1 ([then]
      [terrain]
        terrain=Gg
        x=$unerodable_locs[$i].x
        y=$unerodable_locs[$i].y
      [/terrain]
    [/then])}
  {NEXT i}
#enddef

  {ARCHIPELAGIC_EMPIRES_UNERODE_ONCE}
  {ARCHIPELAGIC_EMPIRES_UNERODE_ONCE}
  {ARCHIPELAGIC_EMPIRES_UNERODE_ONCE}

  # Place shallow water
  [store_locations]
    terrain=Wo
    [filter_adjacent_location]
      terrain=Gg,Ke
      count=1-6
    [/filter_adjacent_location]
    variable=shallower_locs
  [/store_locations]
  {FOREACH shallower_locs i}
    [terrain]
      terrain=Ww
      x=$shallower_locs[$i].x
      y=$shallower_locs[$i].y
    [/terrain]
  {NEXT i}

  # Deal with the encampments
  [store_locations]
    terrain=Ke
    variable=encampment_keeps
  [/store_locations]
  {FOREACH encampment_keeps i}
    [store_locations]
      terrain=Gg
      [and]
        x=$encampment_keeps[$i].x
        y=$encampment_keeps[$i].y
        radius=1
      [/and]
      variable=locations_next_to_keep
    [/store_locations]
    [store_locations]
      terrain=Gg
      [and]
        x=$encampment_keeps[$i].x
        y=$encampment_keeps[$i].y
        radius=2
      [/and]
      [not]
        find_in=locations_next_to_keep
      [/not]
      variable=locations_two_tiles_from_keep
    [/store_locations]
    {FOREACH locations_next_to_keep j}
      {RANDOM 1..8}
      {IF_VAR random not_equals 1 ([then]
        [terrain]
          terrain=Ce
          x=$locations_next_to_keep[$j].x
          y=$locations_next_to_keep[$j].y
        [/terrain]
      [/then])}
    {NEXT j}
    {FOREACH locations_two_tiles_from_keep j}
      {RANDOM 1..8}
      {IF_VAR random equals 1 ([then]
        [terrain]
          terrain=Ce
          x=$locations_two_tiles_from_keep[$j].x
          y=$locations_two_tiles_from_keep[$j].y
        [/terrain]
      [/then])}
    {NEXT j}
  {NEXT i}

  # Remove boring areas
  {STORE_POTENTIAL_ISLAND_LOCATIONS Gg 1}
  
  [while]
    [variable]
      name=potential_island_locations.length
      greater_than=0
    [/variable]
    [do]
      {RANDOM 1..$potential_island_locations.length}
      {VARIABLE_OP random add -1}
      
      [store_locations]
        x=$potential_island_locations[$random].x
        y=$potential_island_locations[$random].y
        radius=1
        variable=possible_interesting_terrain_centers
      [/store_locations]
      {RANDOM 1..$possible_interesting_terrain_centers.length}
      {VARIABLE_OP random add -1}

      [store_locations]
        terrain=Gg
        [and]
          x=$possible_interesting_terrain_centers[$random].x
          y=$possible_interesting_terrain_centers[$random].y
          radius=2
        [/and]
        variable=interior_locations
      [/store_locations]
      [store_locations]
        terrain=Gg
        [and]
          x=$possible_interesting_terrain_centers[$random].x
          y=$possible_interesting_terrain_centers[$random].y
          radius=3
        [/and]
        [not]
          find_in=interior_locations
        [/not]
        variable=edge_locations
      [/store_locations]
      [set_variable]
        name=interesting_stuff_type
        random=Hh,Gs^Fp,Gs^Fds,Ss
      [/set_variable]
      {FOREACH interior_locations j}
        {RANDOM 1..6}
        {IF_VAR random not_equals 1 ([then]
          [terrain]
            terrain=$interesting_stuff_type
            x=$interior_locations[$j].x
            y=$interior_locations[$j].y
          [/terrain]
        [/then])}
      {NEXT j}
      {FOREACH edge_locations j}
        {RANDOM 1..6}
        {IF_VAR random equals 1 ([then]
          [terrain]
            terrain=$interesting_stuff_type
            x=$edge_locations[$j].x
            y=$edge_locations[$j].y
          [/terrain]
        [/then])}
      {NEXT j}

      {STORE_POTENTIAL_ISLAND_LOCATIONS Gg 1}
    [/do]
  [/while]

  # Add villages

#define ARCHIPELAGIC_EMPIRES_SOME_VILLAGES TYPE AVERAGE_HEXES_PER_VILLAGE FILTER
[store_locations]
  {FILTER}
  variable=potential_village_locs
[/store_locations]
{FOREACH potential_village_locs i}
  {RANDOM 1..{AVERAGE_HEXES_PER_VILLAGE}}
  {IF_VAR random equals 1 ([then]
    [terrain]
      terrain={TYPE}
      x=$potential_village_locs[$i].x
      y=$potential_village_locs[$i].y
    [/terrain]
  [/then])}
{NEXT i}
#enddef

  {ARCHIPELAGIC_EMPIRES_SOME_VILLAGES Ww^Vm 20 (terrain=Wo
[filter_adjacent_location]
  terrain=Ww
  count=3
[/filter_adjacent_location])}
  {ARCHIPELAGIC_EMPIRES_SOME_VILLAGES Gg^Ve 25 (terrain=*^F*)}
  {ARCHIPELAGIC_EMPIRES_SOME_VILLAGES Gg^Vh 20 (terrain=Gg)}
  {ARCHIPELAGIC_EMPIRES_SOME_VILLAGES Hh^Vhh 30 (terrain=Hh)}


  [store_locations]
    x=1
    y=1-$archipelagic_empires_map_height
    [or]
      x=$archipelagic_empires_map_width
      y=1-$archipelagic_empires_map_height
    [/or]
    [or]
      x=1-$archipelagic_empires_map_width
      y=1
    [/or]
    [or]
      x=1-$archipelagic_empires_map_width
      y=$archipelagic_empires_map_height
    [/or]
    variable=archipelagic_empires_map_edge_locations
  [/store_locations]

  [fire_event]
    name=archipelagic_empires_map_generation_completed
  [/fire_event]
[/event]

###############################################################################################
# Sea monsters!
###############################################################################################

#define ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION TYPE
{RANDOM 1..$potential_monster_locations.length}
{VARIABLE_OP random add -1}
[unit]
  x=$potential_monster_locations[$random].x
  y=$potential_monster_locations[$random].y
  type={TYPE}
  side=$archipelagic_empires_monster_side
  ai_special=guardian
  generate_name=yes
  random_traits=yes
  random_gender=yes
  [modifications]
    [object]
      [effect]
        apply_to=new_ability
        [abilities]
          {ABILITY_SUBMERGE}
        [/abilities]
      [/effect]
    [/object]
  [/modifications]
[/unit]
#enddef

[event]
name=archipelagic_empires_map_generation_completed
  {VARIABLE min_x_for_center 1}
  {VARIABLE_OP min_x_for_center add 10}
  {VARIABLE min_y_for_center 1}
  {VARIABLE_OP min_y_for_center add 10}
  {VARIABLE max_x_for_center $archipelagic_empires_map_width}
  {VARIABLE_OP max_x_for_center add -10}
  {VARIABLE max_y_for_center $archipelagic_empires_map_height}
  {VARIABLE_OP max_y_for_center add -10}

  [store_locations]
    x=$min_x_for_center|-$max_x_for_center
    y=$min_y_for_center|-$max_y_for_center
    [not]
      [not]
        terrain=Wo
      [/not]
      radius=3
    [/not]
    variable=potential_monster_locations
  [/store_locations]

  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Sea Serpent"}
  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Sea Serpent"}
  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Sea Serpent"}
  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Sea Serpent"}
  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Sea Serpent"}
  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Cuttle Fish"}
  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Cuttle Fish"}
  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Cuttle Fish"}
  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Cuttle Fish"}
  {ARCHIPELAGIC_EMPIRES_PLACE_SEA_MONSTER_AT_RANDOM_LOCATION "Cuttle Fish"}
[/event]

###############################################################################################
# Pirates!
###############################################################################################

#define ARCHIPELAGIC_EMPIRES_PLACE_RANDOM_PIRATE_SHIP X Y
[set_variable]
  name=adj_name_part
  random=_"Smiling",_"Grinning",_"Deadly",_"Perilous",_"Bloody",_"Wandering",_"Alluring",_"Castaway",_"Furious"
[/set_variable]
[set_variable]
  name=noun_name_part
  random=_"Freighter",_"Blade",_"Wombat",_"Maiden",_"Prince",_"Devil",_"Angel",_"Flame",_"Dastard"
[/set_variable]
{PLACE_HSE_PIRATE_SHIP (
  x={X}
  y={Y}
  side=$archipelagic_empires_pirate_side
  name=_"The $adj_name_part| $noun_name_part|"
)}
#enddef

[event]
name=side turn
first_time_only=no
  {IF_VAR side_number equals $archipelagic_empires_pirate_side ([then]
    {RANDOM 0..40}
    {VARIABLE_OP pirate_hundredths_owed add $random}
    {IF_VAR pirate_hundredths_owed greater_than_equal_to 100 ([then]
      # A pirate ship appears, somewhere that no one can see it. I think that this is rather clever.
      # Make a few attempts - if you fail, wait until the next turn I guess
      {VARIABLE attempts 0}
      {VARIABLE done false}
      {RANDOM 1..$archipelagic_empires_map_edge_locations.length}
      {VARIABLE_OP random add -1}
      [while]
        [variable]
          name=done
          boolean_equals=false
        [/variable]
        [variable]
          name=attempts
          less_than=5
        [/variable]
        [do]
          [if]
            [not]
              [have_unit]
                x=$archipelagic_empires_map_edge_locations[$random].x
                y=$archipelagic_empires_map_edge_locations[$random].y
              [/have_unit]
            [/not]
            [then]
              [unit]
                type=Boat
                side=$archipelagic_empires_pirate_side
                id=random_pirate_scout_ship
                x=$archipelagic_empires_map_edge_locations[$random].x
                y=$archipelagic_empires_map_edge_locations[$random].y
              [/unit]
              [if]
                [have_unit]
                  id=random_pirate_scout_ship
                  [filter_vision]
                    visible=no
                    viewing_side=$archipelagic_empires_human_sides
                  [/filter_vision]
                [/have_unit]
                [then]
                  # We found a desirable location! Send pirates.
                  {VARIABLE done true}
                  [kill]
                    id=random_pirate_scout_ship
                    animate=no
                    fire_event=no
                  [/kill]
                  {ARCHIPELAGIC_EMPIRES_PLACE_RANDOM_PIRATE_SHIP $archipelagic_empires_map_edge_locations[$random].x $archipelagic_empires_map_edge_locations[$random].y}
                  {VARIABLE_OP pirate_hundredths_owed sub 100}
                [/then]
                [else]
                  # failure - remove the 'scout ship'.
                  [kill]
                    id=random_pirate_scout_ship
                    animate=no
                    fire_event=no
                  [/kill]
                [/else]
              [/if]
            [/then]
          [/if]
          {VARIABLE_OP attempts add 1}
          {RANDOM 1..$archipelagic_empires_map_edge_locations.length}
          {VARIABLE_OP random add -1}
        [/do]
      [/while]
    [/then])}
  [/then])}
[/event]

###############################################################################################
# Neutral islands
###############################################################################################

#define IS_ARCHIPELAGIC_EMPIRES_NEUTRAL_LEADER
[filter_wml]
  [variables]
    is_archipelagic_empires_neutral_leader=true
  [/variables]
[/filter_wml]
#enddef

#define ARCHIPELAGIC_EMPIRES_MAKE_NEUTRAL_ISLAND_LEADER OTHER_ATTRIBUTES
[unit]
  {OTHER_ATTRIBUTES}
  side=$archipelagic_empires_neutral_island_side
  max_moves=0
  overlays=misc/leader-crown.png
  [variables]
    is_archipelagic_empires_neutral_leader=true
    archipelagic_empires_neutral_leader_gold=50
    archipelagic_empires_neutral_leader_recruits=Footpad,Thug,Thief,Poacher
  [/variables]
[/unit]
#enddef

[event]
name=archipelagic_empires_map_generation_completed
  [store_locations]
    terrain=Ke
    variable=encampment_keeps
  [/store_locations]
  {FOREACH encampment_keeps i}
    {RANDOM (Outlaw,Bandit,Rogue,Trapper)}
    {ARCHIPELAGIC_EMPIRES_MAKE_NEUTRAL_ISLAND_LEADER (
      x=$encampment_keeps[$i].x
      y=$encampment_keeps[$i].y
      type=$random
    )}
  {NEXT i}

  [fire_event]
    name=archipelagic_empires_neutral_leaders_placed
  [/fire_event]
[/event]

[event]
name=side turn
first_time_only=no
  {IF_VAR side_number equals $archipelagic_empires_neutral_island_side ([then]
    [store_unit]
      [filter]
        {IS_ARCHIPELAGIC_EMPIRES_NEUTRAL_LEADER}
      [/filter]
      variable=leaders
    [/store_unit]
    {FOREACH leaders i}
      [store_unit]
        [filter]
          [filter_wml]
            [variables]
              archipelagic_empires_side_leader_id=$leaders[$i].id
            [/variables]
          [/filter_wml]
        [/filter]
        variable=units_paying_upkeep_for
      [/store_unit]
      [store_locations]
        owner_side=$archipelagic_empires_neutral_island_side
        [and]
          # Hack - Each leader "owns" the villages on their own island owned by the neutral side, no matter who captured them
          [filter_radius]
            [not]
              terrain=Wo,Ww,_off^_usr
            [/not]
          [/filter_radius]
          radius=20
        [/and]
        variable=villages_owned
      [/store_locations]
      {VARIABLE upkeep 0}
      {FOREACH units_paying_upkeep_for j}
        {VARIABLE_OP upkeep add $units_paying_upkeep_for[$j].level}
      {NEXT j}
      {VARIABLE_OP upkeep sub $villages_owned.length}
      {IF_VAR upkeep greater_than 0 ([then]
        {VARIABLE_OP leaders[$i].variables.archipelagic_empires_neutral_leader_gold sub $upkeep}
      [/then])}
      # Hack - assume two gold per village
      {VARIABLE_OP leaders[$i].variables.archipelagic_empires_neutral_leader_gold add $villages_owned.length}
      {VARIABLE_OP leaders[$i].variables.archipelagic_empires_neutral_leader_gold add $villages_owned.length}
    {NEXT i}

    [store_unit]
      [filter]
        {IS_ARCHIPELAGIC_EMPIRES_NEUTRAL_LEADER}
        # Only recruit from leaders who are within 20 hexes of players' units (to not lag the game too much at once, and to avoid paying too much upkeep right away?)
        [filter_location]
          radius=20
          [filter]
            side=$archipelagic_empires_human_sides
          [/filter]
        [/filter_location]
      [/filter]
      variable=leaders
    [/store_unit]
    {FOREACH leaders i}
      [store_locations]
        terrain=Ke,Ce
        [not]
          [filter]
          [/filter]
        [/not]
        [and]
          x=$leaders[$i].x
          y=$leaders[$i].y
          radius=3
          [filter_radius]
            terrain=Ke,Ce
          [/filter_radius]
        [/and]
        variable=possible_recruit_locations
      [/store_locations]
      {VARIABLE which_location 0}
      [while]
        [variable]
          name=leaders[$i].variables.archipelagic_empires_neutral_leader_gold
          greater_than=0
        [/variable]
        [variable]
          name=which_location
          less_than=$possible_recruit_locations.length
        [/variable]
        [do]
          # "Recruit"
          {RANDOM $leaders[$i].variables.archipelagic_empires_neutral_leader_recruits}
          [unit]
            type=$random
            generate_name=yes
            random_traits=yes
            random_gender=yes
            side=$leaders[$i].side
            x=$possible_recruit_locations[$which_location].x
            y=$possible_recruit_locations[$which_location].y
            moves=0
            attacks_left=0
            [variables]
              archipelagic_empires_side_leader_id=$leaders[$i].id
            [/variables]
            to_variable=new_recruit
          [/unit]
          {VARIABLE_OP leaders[$i].variables.archipelagic_empires_neutral_leader_gold add -$new_recruit.cost}
          [unstore_unit]
            variable=leaders[$i]
          [/unstore_unit]

          [unstore_unit]
            variable=new_recruit
          [/unstore_unit]
          [fire_event]
            name=prerecruit
            [primary_unit]
              x=$new_recruit.x
              y=$new_recruit.y
            [/primary_unit]
          [/fire_event]

          [animate_unit]
            [filter]
              x=$new_recruit.x
              y=$new_recruit.y
            [/filter]
            flag=recruited
          [/animate_unit]

          [fire_event]
            name=recruit
            [primary_unit]
              x=$new_recruit.x
              y=$new_recruit.y
            [/primary_unit]
          [/fire_event]

          {VARIABLE_OP which_location add 1}
        [/do]
      [/while]
    {NEXT i}
  [/then])}
[/event]

[/multiplayer]

