#define HSHS_GALLEON_MASK
"border_size=0
usage=mask

Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv,Xv,Wo^Bw|,Xv,Xv, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Ce, Ce, Rd, Ce, Rd, Ce, Rd, Ce, Ce, Ce, Ce, Xv, Xv
Xv, Xv, Xv, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Xv, Xv, Xv
Xv, Xv, Xv, Xv, Ce, Xv, Ce, Xv, Ce, Xv, Ce, Xv, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv"#enddef

#define HSHS_LARGE_STERN_GALLEON_MASK
"border_size=0
usage=mask

Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv,Xv,Wo^Bw|,Xv,Xv, Xv, Xv, Xv, Xv
Xv, Xv, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Xv, Xv, Xv, Xv
Xv, Xv, Ce, Ce, Ce, Rd, Ce, Rd, Ce, Rd, Ce, Ce, Ce, Ce, Xv, Xv
Xv, Xv, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Xv, Xv, Xv
Xv, Xv, Ce, Xv, Ce, Xv, Ce, Xv, Ce, Xv, Ce, Xv, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv"#enddef

#define HSHS_FRIGATE_MASK
"border_size=0
usage=mask

Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv
Xv, Xv, Xv, Xv,Xv,Wo^Bw|,Xv,Xv, Xv, Xv
Xv, Ce, Ce, Ce, Ce, Ce, Ce, Ce, Xv, Xv
Xv, Ce, Rd, Ce, Rd, Ce, Rd, Ce, Ce, Xv
Xv, Xv, Ce, Xv, Ce, Xv, Ce, Xv, Xv, Xv
Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv, Xv"#enddef

#define IS_SHIP
  [filter_wml]
    [variables]
      is_ship=true
    [/variables]
  [/filter_wml]
#enddef

#define PLACE_GALLEON_CANNON X Y
{GET_XY_FROM_MASK_XY galleon_cannon_x galleon_cannon_y unit_with_interior.variables.interior_space {X} {Y}}
[item]
  x=$galleon_cannon_x
  y=$galleon_cannon_y
  image=projectiles/stone.png
[/item]
{VARIABLE unit_with_interior.variables.cannon_x_list $unit_with_interior.variables.cannon_x_list|,$galleon_cannon_x}
{VARIABLE unit_with_interior.variables.cannon_y_list $unit_with_interior.variables.cannon_y_list|,$galleon_cannon_y}
{VARIABLE hex_contains_cannon_$galleon_cannon_x|_$galleon_cannon_y true}
{VARIABLE hex_cannon_owner_$galleon_cannon_x|_$galleon_cannon_y $unit_with_interior.id}
#enddef
#define ENLARGE_STERN VAR
{VARIABLE {VAR}.variables.large_stern true}
[terrain_mask]
  x=${VAR}.variables.interior_space.mask_x
  y=${VAR}.variables.interior_space.mask_y
  mask={HSHS_LARGE_STERN_GALLEON_MASK}
  [rule]
    new={VOID_TERRAINS}
    use_old=yes
  [/rule]
  [rule]
    old={VOID_TERRAINS}
  [/rule]
  [rule]
    use_old=yes
  [/rule]
[/terrain_mask]
[set_variables]
  name=unit_with_interior
  to_variable={VAR}
[/set_variables]
{PLACE_GALLEON_CANNON 3 3}
{PLACE_GALLEON_CANNON 3 6}
[set_variables]
  name={VAR}
  to_variable=unit_with_interior
[/set_variables]
#enddef
#define GALLEON_DELETE_CANNONS
      [store_locations]
        x=$unit_with_interior.variables.cannon_x_list
        y=$unit_with_interior.variables.cannon_y_list
        variable=cannons
      [/store_locations]
      {FOREACH cannons i}
        [removeitem]
          x=$cannons[$i].x
          y=$cannons[$i].y
          image=projectiles/stone.png
        [/removeitem]
        {VARIABLE hex_contains_cannon_$cannons[$i|].x|_$cannons[$i|].y false}
      {NEXT i}
#enddef
#define PLACE_GALLEON_RIGGING X Y
{GET_XY_FROM_MASK_XY galleon_cannon_x galleon_cannon_y unit_with_interior.variables.interior_space {X} {Y}}
{VARIABLE unit_with_interior.variables.rigging_x_list $unit_with_interior.variables.rigging_x_list|,$galleon_cannon_x}
{VARIABLE unit_with_interior.variables.rigging_y_list $unit_with_interior.variables.rigging_y_list|,$galleon_cannon_y}
{VARIABLE hex_contains_rigging_$galleon_cannon_x|_$galleon_cannon_y true}
{VARIABLE hex_rigging_owner_$galleon_cannon_x|_$galleon_cannon_y $unit_with_interior.id}
#enddef
#define GALLEON_DELETE_RIGGING
      [store_locations]
        x=$unit_with_interior.variables.rigging_x_list
        y=$unit_with_interior.variables.rigging_y_list
        variable=rigging
      [/store_locations]
      {FOREACH rigging i}
        {VARIABLE hex_contains_rigging_$rigging[$i|].x|_$rigging[$i|].y false}
      {NEXT i}
#enddef
#define PLACE_GALLEON_GANGPLANK X Y
{GET_XY_FROM_MASK_XY galleon_cannon_x galleon_cannon_y unit_with_interior.variables.interior_space {X} {Y}}
{VARIABLE unit_with_interior.variables.gangplank_x $galleon_cannon_x}
{VARIABLE unit_with_interior.variables.gangplank_y $galleon_cannon_y}
{VARIABLE hex_contains_gangplank_$galleon_cannon_x|_$galleon_cannon_y true}
{VARIABLE hex_gangplank_owner_$galleon_cannon_x|_$galleon_cannon_y $unit_with_interior.id}
#enddef
#define GALLEON_DELETE_GANGPLANK
      {VARIABLE hex_contains_gangplank_$unit_with_interior.variables.gangplank_x|_$unit_with_interior.variables.gangplank_y false}
#enddef
#define PLACE_GALLEON_HELM X Y
{GET_XY_FROM_MASK_XY galleon_cannon_x galleon_cannon_y unit_with_interior.variables.interior_space {X} {Y}}
[item]
  x=$galleon_cannon_x
  y=$galleon_cannon_y
  image=scenery/leanto.png
[/item]
{VARIABLE unit_with_interior.variables.helm_x $galleon_cannon_x}
{VARIABLE unit_with_interior.variables.helm_y $galleon_cannon_y}
{VARIABLE hex_contains_helm_$galleon_cannon_x|_$galleon_cannon_y true}
{VARIABLE hex_helm_owner_$galleon_cannon_x|_$galleon_cannon_y $unit_with_interior.id}
#enddef
#define GALLEON_DELETE_HELM
      [removeitem]
        x=$unit_with_interior.variables.helm_x
        y=$unit_with_interior.variables.helm_y
        image=scenery/leanto.png
      [/removeitem]
      {VARIABLE hex_contains_helm_$unit_with_interior.variables.helm_x|_$unit_with_interior.variables.helm_y false}
#enddef
#define PLACE_GALLEON_HOLD RUM_X RUM_Y RUM_MAX JEWELS_X JEWELS_Y JEWELS_MAX SPICES_X SPICES_Y SPICES_MAX
{VARIABLE unit_with_interior.variables.carries_commodities true}
{GET_XY_FROM_MASK_XY galleon_cannon_x galleon_cannon_y unit_with_interior.variables.interior_space {RUM_X} {RUM_Y}}
{VARIABLE unit_with_interior.variables.rum_x $galleon_cannon_x}
{VARIABLE unit_with_interior.variables.rum_y $galleon_cannon_y}
{VARIABLE unit_with_interior.variables.rum_max {RUM_MAX}}
[item]
  x=$galleon_cannon_x
  y=$galleon_cannon_y
  image=items/barrel.png
[/item]
{GET_XY_FROM_MASK_XY galleon_cannon_x galleon_cannon_y unit_with_interior.variables.interior_space {JEWELS_X} {JEWELS_Y}}
{VARIABLE unit_with_interior.variables.jewels_x $galleon_cannon_x}
{VARIABLE unit_with_interior.variables.jewels_y $galleon_cannon_y}
{VARIABLE unit_with_interior.variables.jewels_max {JEWELS_MAX}}
[item]
  x=$galleon_cannon_x
  y=$galleon_cannon_y
  image=items/chest.png
[/item]
{GET_XY_FROM_MASK_XY galleon_cannon_x galleon_cannon_y unit_with_interior.variables.interior_space {SPICES_X} {SPICES_Y}}
{VARIABLE unit_with_interior.variables.spices_x $galleon_cannon_x}
{VARIABLE unit_with_interior.variables.spices_y $galleon_cannon_y}
{VARIABLE unit_with_interior.variables.spices_max {SPICES_MAX}}
[item]
  x=$galleon_cannon_x
  y=$galleon_cannon_y
  image=items/ornate2.png
[/item]
{GALLEON_REFRESH_LABELS unit_with_interior}
#enddef
#define GALLEON_DELETE_HOLD
{IF_VAR unit_with_interior.variables.carries_commodities equals true ([then]
  [item]
    x=$unit_with_interior.variables.rum_x
    y=$unit_with_interior.variables.rum_y
    image=items/barrel.png
  [/item]
  [item]
    x=$unit_with_interior.variables.jewels_x
    y=$unit_with_interior.variables.jewels_y
    image=items/chest.png
  [/item]
  [item]
    x=$unit_with_interior.variables.spices_x
    y=$unit_with_interior.variables.spices_y
    image=items/ornate2.png
  [/item]
[/then])}
#enddef
#define GALLEON_REFRESH_LABELS VAR
{REFRESH_CARGO_LABELS {VAR}}
[label]
  x=${VAR}.variables.interior_space.center_x
  y=${VAR}.variables.interior_space.center_y
  text=_"*Deck of the ${VAR}.name"
[/label]
#enddef
#define GALLEON_DELETE_LABELS
[label]
  x=$unit_with_interior.variables.interior_space.center_x
  y=$unit_with_interior.variables.interior_space.center_y
  text=""
[/label]
{IF_VAR unit_with_interior.variables.carries_commodities equals true ([then]
[label]
  x=$unit_with_interior.variables.rum_x
  y=$unit_with_interior.variables.rum_y
  text=""
[/label]
[label]
  x=$unit_with_interior.variables.jewels_x
  y=$unit_with_interior.variables.jewels_y
  text=""
[/label]
[label]
  x=$unit_with_interior.variables.spices_x
  y=$unit_with_interior.variables.spices_y
  text=""
[/label]
[/then])}
#enddef

#define PLACE_SHIP HITPOINT_INCREASE RAM_DAMAGE OTHER_ATTRIBUTES MASK SETUP
{PLACE_UNIT_WITH_INTERIOR
(
  {OTHER_ATTRIBUTES}
  gender=female
  random_traits=no
  alignment=neutral
  max_experience=9999

  [modifications]
    {TRAIT_MECHANICAL}
    [object]
      [effect]
        apply_to=resistance
        replace=true
        [resistance]
          blade=40
          pierce=40
          impact=100
          fire=120
          cold=80
          arcane=20
        [/resistance]
      [/effect]
      [effect]
        apply_to=defense
        replace=true
        [defense]
          deep_water=50
          shallow_water=60
          swamp_water=70
          village=70
        [/defense]
      [/effect]
      [effect]
        apply_to=movement_costs
        replace=true
        [movement_costs]
          deep_water=1
          shallow_water=1
          swamp_water=3
          village=1
        [/movement_costs]
      [/effect]
      [effect]
        apply_to=movement
        set=1
      [/effect]
      [effect]
        apply_to=hitpoints
        increase_total={HITPOINT_INCREASE}
      [/effect]
      [effect]
        apply_to=remove_attacks
      [/effect]
      [effect]
        apply_to=new_attack
        name= _ "ram"
        icon=attacks/blank-attack.png
        type=impact
        range=melee
        damage={RAM_DAMAGE}
        number=1
      [/effect]
      [effect]
        apply_to=new_animation
        [attack_anim]
          [filter_attack]
            name="ram"
          [/filter_attack]
          [frame]
            begin=-200
            sound=water-blast.wav
          [/frame]
        [/attack_anim]
      [/effect]
      [effect]
        apply_to=new_attack
        name= _ "cannon"
        icon=attacks/thunderstick.png
        type=impact
        range=ranged
        damage=10
        number=0
      [/effect]
      [effect]
        apply_to=new_animation
        [attack_anim]
          [filter_attack]
            name=cannon
          [/filter_attack]
          [missile_frame]
            begin=-200
            end=0
            image="projectiles/stone.png"
            image_diagonal="projectiles/stone.png"
          [/missile_frame]
          [frame]
            begin=-200
            sound=gunshot.wav
          [/frame]
        [/attack_anim]
      [/effect]
    [/object]	
  [/modifications]

  [+variables]
    is_ship=true
  [/variables]
)
({SETUP})
(
  {GALLEON_DELETE_LABELS}
  {GALLEON_DELETE_CANNONS}
  {GALLEON_DELETE_RIGGING}
  {GALLEON_DELETE_GANGPLANK}
  {GALLEON_DELETE_HELM}
  {GALLEON_DELETE_HOLD}
) ({MASK}) 7 8 5}
#enddef

#define PUT_TO_GANGPLANK BOARDER BOARDEE
      {VARIABLE {BOARDER}.x ${BOARDEE}.variables.gangplank_x}
      {VARIABLE {BOARDER}.y ${BOARDEE}.variables.gangplank_y}
      {VARIABLE_OP {BOARDER}.moves add -1}
      [store_unit]
        [filter]
	  x=${BOARDER}.x
	  y=${BOARDER}.y
	[/filter]
	variable=boarding_pushed
	kill=yes
      [/store_unit]
      [unstore_unit]
        variable={BOARDER}
      [/unstore_unit]
      {IF_VAR boarding_pushed.length equals 1 ([then]
        {VARIABLE found_empty_locations.length 0}
        {VARIABLE radius 0}
        [while]
          [variable]
            name=found_empty_locations.length
            equals=0
          [/variable]
          [do]
            {VARIABLE_OP radius add 1}
            [store_locations]
              [not]
                [filter]
                [/filter]
              [/not]
              [not]
                terrain={OBSTRUCTING_TERRAINS}
              [/not]
              [and]
                x=$boarder.x
                y=$boarder.y
                radius=$radius
                [filter_radius]
                  [not]
                    terrain={VOID_TERRAINS}
                  [/not]
                [/filter_radius]
              [/and]
              variable=found_empty_locations
            [/store_locations]
          [/do]
        [/while]
        {RANDOM 1..$found_empty_locations.length}
        {VARIABLE_OP random add -1}
        {VARIABLE boarding_pushed.x $found_empty_locations[$random].x}
        {VARIABLE boarding_pushed.y $found_empty_locations[$random].y}
        [unstore_unit]
	  variable=boarding_pushed
	[/unstore_unit]
      [/then])}
      {HSHS_COMPLETE_MOVETO ${BOARDER}.x ${BOARDER}.y}
      [scroll_to]
        x=${BOARDER}.x
        y=${BOARDER}.y
        check_fogged=true
      [/scroll_to]
#enddef

#define GALLEON_BOARD_MESSAGE_n
_"Board the ship to the north"#enddef
#define GALLEON_BOARD_MESSAGE_ne
_"Board the ship to the northeast"#enddef
#define GALLEON_BOARD_MESSAGE_nw
_"Board the ship to the northwest"#enddef
#define GALLEON_BOARD_MESSAGE_s
_"Board the ship to the south"#enddef
#define GALLEON_BOARD_MESSAGE_se
_"Board the ship to the southeast"#enddef
#define GALLEON_BOARD_MESSAGE_sw
_"Board the ship to the southwest"#enddef
#define GALLEON_MAKE_BOARD_COMMAND DIRECTION
[event]
name=prestart
  [set_menu_item]
    id=galleon_board_{DIRECTION}
    description={GALLEON_BOARD_MESSAGE_{DIRECTION}}
    image=cursors/move.png
    [filter_location]
      [filter]
        side=$side_number
	[not]
	  [filter_wml]
	    moves=0
	  [/filter_wml]
	[/not]
	[not]
	  {IS_SHIP}
	[/not]
      [/filter]
      [filter_adjacent_location]
        adjacent={DIRECTION}
	[filter]
	  {IS_SHIP}
	[/filter]
      [/filter_adjacent_location]
    [/filter_location]
    [command]
      [store_unit]
        [filter]
	  [filter_adjacent]
            adjacent={EHS_OPPOSITE_DIRECTION_{DIRECTION}}
	    x=$x1
	    y=$y1
          [/filter_adjacent]
	[/filter]
	variable=boardee
      [/store_unit]
      [store_unit]
        [filter]
	  x=$x1
	  y=$y1
	[/filter]
	variable=boarder
        kill=yes
      [/store_unit]
      {PUT_TO_GANGPLANK boarder boardee}
    [/command]
  [/set_menu_item]
[/event]
#enddef

#define GALLEON_UNBOARD_MESSAGE_n
_"Disembark to the north"#enddef
#define GALLEON_UNBOARD_MESSAGE_ne
_"Disembark to the northeast"#enddef
#define GALLEON_UNBOARD_MESSAGE_nw
_"Disembark to the northwest"#enddef
#define GALLEON_UNBOARD_MESSAGE_s
_"Disembark to the south"#enddef
#define GALLEON_UNBOARD_MESSAGE_se
_"Disembark to the southeast"#enddef
#define GALLEON_UNBOARD_MESSAGE_sw
_"Disembark to the southwest"#enddef

#define SETUP_DISEMBARK_OPTION DIRECTION
      [store_locations]
        [not]
          [filter]
          [/filter]
        [/not]
        [not]
          terrain={OBSTRUCTING_TERRAINS}
        [/not]
        [filter_adjacent_location]
          adjacent={EHS_OPPOSITE_DIRECTION_{DIRECTION}}
          [filter]
            {IS_SHIP}
            [filter_wml]
              [variables]
                gangplank_x=$x1
                gangplank_y=$y1
              [/variables]
            [/filter_wml]
          [/filter]
        [/filter_adjacent_location]
        variable=target_loc
      [/store_locations]
      {IF_VAR target_loc.length equals 0 ([then]
        {VARIABLE can_disembark_{DIRECTION} false}
      [/then]
      [else]
        {VARIABLE can_disembark_{DIRECTION} true}
        {VARIABLE disembark_x_{DIRECTION} $target_loc.x}
        {VARIABLE disembark_y_{DIRECTION} $target_loc.y}
      [/else])}
#enddef
#define OPTION_DISEMBARK_OPTION DIRECTION
[option]
  message={GALLEON_UNBOARD_MESSAGE_{DIRECTION}}
  [show_if]
    [variable]
      name=can_disembark_{DIRECTION}
      boolean_equals=true
    [/variable]
  [/show_if]
  [command]
      [store_unit]
        [filter]
          x=$x1
          y=$y1
        [/filter]
        variable=disembarker
        kill=yes
      [/store_unit]
      {VARIABLE disembarker.x $disembark_x_{DIRECTION}}
      {VARIABLE disembarker.y $disembark_y_{DIRECTION}}
      {VARIABLE_OP disembarker.moves add -1}
      [unstore_unit]
        variable=disembarker
      [/unstore_unit]
      {HSHS_COMPLETE_MOVETO $disembarker.x $disembarker.y}
      [scroll_to]
        x=$disembarker.x
        y=$disembarker.y
        check_fogged=true
      [/scroll_to]
  [/command]
[/option]
#enddef
#define GALLEON_MAKE_DISEMBARK_COMMAND
[event]
name=prestart
  [set_menu_item]
    id=galleon_disembark
    description=_"Disembark"
    image=cursors/move.png
    [show_if]
      [have_location]
        [not]
          terrain={OBSTRUCTING_TERRAINS}
        [/not]
        [not]
          [filter]
          [/filter]
        [/not]
        [filter_adjacent_location]
          [filter]
            {IS_SHIP}
            [filter_wml]
              [variables]
                gangplank_x=$x1
                gangplank_y=$y1
              [/variables]
            [/filter_wml]
          [/filter]
        [/filter_adjacent_location]
      [/have_location]
    [/show_if]
    [filter_location]
      [filter]
        side=$side_number
        [not]
          [filter_wml]
            moves=0
          [/filter_wml]
        [/not]
      [/filter]
    [/filter_location]
    [command]
      [scroll_to_unit]
        {IS_SHIP}
        [filter_wml]
          [variables]
            gangplank_x=$x1
            gangplank_y=$y1
          [/variables]
        [/filter_wml]
      [/scroll_to_unit]
      {APPLY_FOR_ALL_DIRECTIONS SETUP_DISEMBARK_OPTION}
      [message]
        speaker=narrator
        message=_"In which direction?"
        side_for=$side_number
        [option]
          message=_"Never mind."
        [/option]
        {APPLY_FOR_ALL_DIRECTIONS OPTION_DISEMBARK_OPTION}
      [/message]
    [/command]
  [/set_menu_item]
[/event]
#enddef

#define GALLEON_FILTER_attacker
x=$x1
y=$y1#enddef
#define GALLEON_FILTER_defender
x=$x2
y=$y2#enddef
#define GALLEON_WHICH_FILTER_attacker
filter#enddef
#define GALLEON_WHICH_FILTER_defender
filter_second#enddef
#define GALLEON_USES_UP_CANNON WHO DOES_WHAT
[event]
name={WHO} {DOES_WHAT}
first_time_only=no
[{GALLEON_WHICH_FILTER_{WHO}}]
  {IS_SHIP}
[/{GALLEON_WHICH_FILTER_{WHO}}]
  [store_unit]
    [filter]
      {GALLEON_FILTER_{WHO}}
    [/filter]
    variable=galleon
  [/store_unit]
  {VARIABLE_OP galleon.attack[1].number add -1}
  [unstore_unit]
    variable=galleon
  [/unstore_unit]
[/event]
#enddef

#define SET_NUM_CANNONS VAR
  [store_unit]
    [filter]
      x=${VAR}.variables.cannon_x_list
      y=${VAR}.variables.cannon_y_list
      side=${VAR}.side
      [filter_location]
	# destroyed/damaged cannons do not function; require encampment
        terrain=Ce
      [/filter_location]
    [/filter]
    variable=cannoneers
  [/store_unit]
  {VARIABLE {VAR}.attack[1].number $cannoneers.length}
#enddef

#define SET_NUM_CANNONS_ON_ATTACK WHO
[event]
name=attack
first_time_only=no
[{GALLEON_WHICH_FILTER_{WHO}}]
  {IS_SHIP}
[/{GALLEON_WHICH_FILTER_{WHO}}]
  [store_unit]
    [filter]
      {GALLEON_FILTER_{WHO}}
    [/filter]
    variable=galleon
  [/store_unit]
  {SET_NUM_CANNONS galleon}
  [unstore_unit]
    variable=galleon
  [/unstore_unit]
[/event]
#enddef

#define SET_TO_NO_MOVEMENT VAR
      {VARIABLE {VAR}.variables.no_movement true}
      [set_variables]
        name={VAR}.variables.standard_movement_costs
        to_variable={VAR}.movement_costs
      [/set_variables]
      [set_variables]
        name={VAR}.movement_costs
        mode=replace
        [value]
            deep_water={UNREACHABLE}
            shallow_water={UNREACHABLE}
            reef={UNREACHABLE}
            swamp_water={UNREACHABLE}
            flat={UNREACHABLE}
            sand={UNREACHABLE}
            forest={UNREACHABLE}
            hills={UNREACHABLE}
            mountains={UNREACHABLE}
            village={UNREACHABLE}
            castle={UNREACHABLE}
            cave={UNREACHABLE}
            frozen={UNREACHABLE}
            unwalkable={UNREACHABLE}
            impassable={UNREACHABLE}
            fungus={UNREACHABLE}
        [/value]
      [/set_variables]
#enddef
#define SET_BACK_TO_NORMAL_MOVEMENT VAR
      {VARIABLE {VAR}.variables.no_movement false}
      [set_variables]
        name={VAR}.movement_costs
        to_variable={VAR}.variables.standard_movement_costs
      [/set_variables]
#enddef

#define REMOVE_MANNING_BONUS TYPE WHAT_IN_HEX EFFECTS_OFF
      {VARIABLE cannon_checking_hack {TYPE}}
      {IF_VAR cannon_checking_hack equals cannon ([then]
        [store_unit]
          [filter]
            id=$hex_{WHAT_IN_HEX}_owner_$x1|_$y1
          [/filter]
          variable=ship
        [/store_unit]
        {IF_VAR ship.attack[1].number equals 1 ([then]
          [object]
            silent=yes
            [filter]
              id=$hex_{WHAT_IN_HEX}_owner_$x1|_$y1
            [/filter]
            [effect]
              apply_to=remove_attacks
              name=cannon
            [/effect]
            [effect]
              apply_to=new_attack
              name= _ "cannon"
              icon=attacks/thunderstick.png
              type=impact
              range=ranged
              damage=10
              number=0
            [/effect]
          [/object]
        [/then]
        [else]
          [object]
            silent=yes
            [filter]
              id=$hex_{WHAT_IN_HEX}_owner_$x1|_$y1
            [/filter]
            [effect]
              {EFFECTS_OFF}
            [/effect]
          [/object]
        [/else])}
      [/then]
      [else]
        [object]
          silent=yes
          [filter]
            id=$hex_{WHAT_IN_HEX}_owner_$x1|_$y1
          [/filter]
          [effect]
            {EFFECTS_OFF}
          [/effect]
        [/object]
      [/else])}
#enddef

#define MAKE_MANNING_ITEMS TYPE MAN_DESC UNMAN_DESC IMAGE WHAT_IN_HEX MANNER_FILTER OVERLAY EFFECTS_ON EFFECTS_OFF
[event]
  name=prestart
  [set_menu_item]
    id=man_{TYPE}
    description={MAN_DESC}
    image={IMAGE}
    [show_if]
      [variable]
        name=hex_contains_{WHAT_IN_HEX}_$x1|_$y1
        boolean_equals=true
      [/variable]
      [have_unit]
        side=$side_number
        id=$hex_{WHAT_IN_HEX}_owner_$x1|_$y1
      [/have_unit]
    [/show_if]
    [filter_location]
      [filter]
        side=$side_number
        {MANNER_FILTER}
        [not]
          [filter_wml]
            [variables]
              manning_something=true
            [/variables]
          [/filter_wml]
        [/not]
      [/filter]
    [/filter_location]
    [command]
      [store_unit]
        [filter]
          x=$x1
          y=$y1
        [/filter]
        variable=new_manner
      [/store_unit]
      {VARIABLE new_manner.moves 0}
      {VARIABLE new_manner.variables.manning_something true}
      {VARIABLE new_manner.variables.manning_{TYPE} true}
      {SET_TO_NO_MOVEMENT new_manner}
      [unstore_unit]
        variable=new_manner
      [/unstore_unit]
      [unit_overlay]
        x=$x1
        y=$y1
        image={OVERLAY}
      [/unit_overlay]
      [object]
        silent=yes
        [filter]
          id=$hex_{WHAT_IN_HEX}_owner_$x1|_$y1
        [/filter]
        [effect]
          {EFFECTS_ON}
        [/effect]
      [/object]
    [/command]
  [/set_menu_item]
  [set_menu_item]
    id=unman_{TYPE}
    description={UNMAN_DESC}
    image={IMAGE}
    [filter_location]
      [filter]
        side=$side_number
        [filter_wml]
          [variables]
            manning_{TYPE}=true
          [/variables]
        [/filter_wml]
      [/filter]
    [/filter_location]
    [command]
      [fire_event]
        name=hshs_stop_manning
        [primary_unit]
          x=$x1
          y=$y1
        [/primary_unit]
      [/fire_event]
    [/command]
  [/set_menu_item]
[/event]

[event]
name=hshs_stop_manning
first_time_only=no
  [store_unit]
    [filter]
      x=$x1
      y=$y1
    [/filter]
    variable=old_manner
  [/store_unit]
  {IF_VAR old_manner.variables.manning_{TYPE} equals true ([then]
      {VARIABLE old_manner.variables.manning_something false}
      {VARIABLE old_manner.variables.manning_{TYPE} false}
      {SET_BACK_TO_NORMAL_MOVEMENT old_manner}
      [unstore_unit]
        variable=old_manner
      [/unstore_unit]
      [remove_unit_overlay]
        x=$x1
        y=$y1
        image={OVERLAY}
      [/remove_unit_overlay]
      {REMOVE_MANNING_BONUS {TYPE} {WHAT_IN_HEX} ({EFFECTS_OFF})}
  [/then])}
[/event]

[event]
name=die
first_time_only=no
[filter]
  side=$side_number
  [filter_wml]
    [variables]
      manning_{TYPE}=true
    [/variables]
  [/filter_wml]
[/filter]
  {REMOVE_MANNING_BONUS {TYPE} {WHAT_IN_HEX} ({EFFECTS_OFF})}
[/event]
#enddef

#define USE_GALLEONS
{APPLY_FOR_ALL_DIRECTIONS GALLEON_MAKE_BOARD_COMMAND}
{GALLEON_MAKE_DISEMBARK_COMMAND}

[event]
name=side turn
first_time_only=no
  [store_unit]
    [filter]
      {IS_SHIP}
    [/filter]
    variable=galleons
  [/store_unit]
  {FOREACH galleons i}
    {GALLEON_REFRESH_LABELS galleons[$i]}
  {NEXT i}
[/event]

[event]
name=die
first_time_only=no
[filter]
  {IS_SHIP}
[/filter]
  [store_unit]
    [filter]
      x=$x1
      y=$y1
    [/filter]
    variable=unit_with_interior
  [/store_unit]
  [store_unit]
    [filter]
      side=$unit_with_interior.side
      canrecruit=1
      [filter_location]
        x=$unit_with_interior.variables.interior_space.center_x
        y=$unit_with_interior.variables.interior_space.center_y
        radius=$unit_with_interior.variables.interior_space.radius
      [/filter_location]
    [/filter]
    variable=leader_inside
  [/store_unit]
  {IF_VAR leader_inside.length equals 1 ([then]
    [fire_event]
      name=hshs_stop_manning
      [primary_unit]
        x=$leader_inside.x
        y=$leader_inside.y
      [/primary_unit]
    [/fire_event]
    [teleport]
      [filter]
        x=$leader_inside.x
        y=$leader_inside.y
      [/filter]
      x=$x1
      y=$y1
    [/teleport]
  [/then])}
  [kill]
    [filter_location]
      x=$unit_with_interior.variables.interior_space.center_x
      y=$unit_with_interior.variables.interior_space.center_y
      radius=$unit_with_interior.variables.interior_space.radius
    [/filter_location]
    animate=no
    fire_event=no
  [/kill]
  {WIPE_INTERIOR_SPACE_OF_UNIT}
[/event]

[event]
name=post advance
first_time_only=no
[filter]
  [filter_wml]
    [variables]
      no_movement=true
    [/variables]
  [/filter_wml]
[/filter]
  [store_unit]
    [filter]
      x=$x1
      y=$y1
    [/filter]
    variable=levelling_unit
  [/store_unit]
  {SET_TO_NO_MOVEMENT levelling_unit}
  [unstore_unit]
    variable=levelling_unit
  [/unstore_unit]
[/event]

{MAKE_MANNING_ITEMS cannon _"Operate Cannon" _"At Ease" cursors/move_drag.png cannon () "misc/cross-white.png" (
          apply_to=attack
          name=cannon
          increase_attacks=1
)
(
          apply_to=attack
          name=cannon
          increase_attacks=-1
)}

{MAKE_MANNING_ITEMS rigging _"Man The Rigging" _"Return To Deck" cursors/move_drag.png rigging () "flags/flag-icon.png" (
          apply_to=movement
          increase=3
)
(
          apply_to=movement
          increase=-3
)}

{MAKE_MANNING_ITEMS navigate _"Navigate: +2 Moves" _"Stop Navigating" buttons/group_water-active.png helm (canrecruit=true
[not]
  [filter_wml]
    moves=0
  [/filter_wml]
[/not]
[not]
  [filter_wml]
    [variables]
      has_nautical_maps=true
    [/variables]
  [/filter_wml]
[/not]) "misc/dot-white.png" (
          apply_to=movement
          increase=2
)
(
          apply_to=movement
          increase=-2
)}

{MAKE_MANNING_ITEMS navigate_plus _"Navigate: +4 Moves" _"Stop Navigating" buttons/group_water-active.png helm (canrecruit=true
[not]
  [filter_wml]
    moves=0
  [/filter_wml]
[/not]
[filter_wml]
  [variables]
    has_nautical_maps=true
  [/variables]
[/filter_wml]
) "misc/dot-white.png" (
          apply_to=movement
          increase=4
)
(
          apply_to=movement
          increase=-4
)}

{MAKE_MANNING_ITEMS pilot _"Pilot: Skirmisher" _"Stop Piloting" buttons/group_water-active.png helm (canrecruit=true
[not]
  [filter_wml]
    moves=0
  [/filter_wml]
[/not]) "misc/dot-white.png" (
          apply_to=new_ability
          [abilities]
            {ABILITY_SKIRMISHER}
          [/abilities]
)
(
          apply_to=remove_ability
          [abilities]
            {ABILITY_SKIRMISHER}
          [/abilities]
)}

[event]
name=prestart
  [set_menu_item]
    id=Commandeer_a_Ship
    description=_ "Commandeer The Vessel"
    [show_if]
      [variable]
        name=hex_contains_helm_$x1|_$y1
        boolean_equals=true
      [/variable]
      [have_unit]
        [not]
          side=$side_number
        [/not]
        id=$hex_helm_owner_$x1|_$y1
      [/have_unit]
    [/show_if]
    [filter_location]
      [filter]
        side=$side_number
        canrecruit=true
      [/filter]
    [/filter_location]
    [command]
      [store_unit]
        [filter]
          x=$x1
          y=$y1
        [/filter]
        variable=commandeerer
      [/store_unit]
      [store_unit]
        [filter]
          id=$hex_helm_owner_$x1|_$y1
        [/filter]
        variable=being_commandeered
      [/store_unit]
      [store_unit]
        [filter]
          x=$being_commandeered.variables.cannon_x_list
          y=$being_commandeered.variables.cannon_y_list
          [or]
            x=$being_commandeered.variables.rigging_x_list
            y=$being_commandeered.variables.rigging_y_list
          [/or]
        [/filter]
        variable=ship_workers
      [/store_unit]
      {FOREACH ship_workers i}
        [fire_event]
          name=hshs_stop_manning
          [primary_unit]
            x=$ship_workers[$i].x
            y=$ship_workers[$i].y
          [/primary_unit]
        [/fire_event]
      {NEXT i}
      # store it again, because it has probably been modified
      [store_unit]
        [filter]
          id=$hex_helm_owner_$x1|_$y1
        [/filter]
        variable=being_commandeered
      [/store_unit]
      {VARIABLE being_commandeered.side $side_number}
      [unstore_unit]
        variable=being_commandeered
      [/unstore_unit]
      [print]
        text= _ "$commandeerer.name has commandeered a ship!"
        size=14
        red,green,blue=51,153,255
      [/print]
    [/command]
  [/set_menu_item]
[/event]

[event]
name=attacker_hits
first_time_only=no
[filter]
  type="Pirate Galleon"
[/filter]
[filter_attack]
  name="boarding party"
[/filter_attack]
[filter_second]
  {IS_SHIP}
[/filter_second]
  [store_unit]
    [filter]
      x=$x2
      y=$y2
    [/filter]
    variable=boardee
  [/store_unit]
  {CLEAR_VARIABLE boarder}
  [unit]
    side=$side_number
    type=Fencer
    id=Pirate
    name=_"Pirate"
    x=$boardee.variables.gangplank_x
    y=$boardee.variables.gangplank_x
    random_traits=no
    to_variable=boarder
  [/unit]
  {PUT_TO_GANGPLANK boarder boardee}
[/event]

[event]
name=attack
first_time_only=no
[filter]
  [filter_wml]
    [movement_costs]
      unwalkable=1
    [/movement_costs]
  [/filter_wml]
[/filter]
[filter_second]
  {IS_SHIP}
[/filter_second]
  [store_unit]
    [filter]
      x=$x2
      y=$y2
    [/filter]
    variable=boardee
  [/store_unit]
  [store_unit]
    [filter]
      x=$x1
      y=$y1
    [/filter]
    variable=boarder
    kill=yes
  [/store_unit]
  [store_locations]
    [not]
      [filter]
      [/filter]
    [/not]
    [not]
      terrain={OBSTRUCTING_TERRAINS}
    [/not]
    [and]
      x=$boardee.variables.interior_space.center_x
      y=$boardee.variables.interior_space.center_y
      radius=$boardee.variables.interior_space.radius
    [/and]
    variable=possible_landing_locations
  [/store_locations]
  {RANDOM 1..$possible_landing_locations.length}
  {VARIABLE_OP random add -1}
  {VARIABLE boarder.x $possible_landing_locations[$random].x}
  {VARIABLE boarder.y $possible_landing_locations[$random].y}
  [unstore_unit]
    variable=boarder
  [/unstore_unit]
  {HSHS_COMPLETE_MOVETO $boarder.x $boarder.y}
  [scroll_to]
    x=$boarder.x
    y=$boarder.y
  [/scroll_to]
[/event]
#enddef

#define PLACE_GALLEON_SHIP OTHER_ATTRIBUTES
{PLACE_SHIP 119 12 (type=Galleon
level=3
{OTHER_ATTRIBUTES})
({HSHS_GALLEON_MASK})
(
      {VARIABLE unit_with_interior.variables.cannon_x_list 0}
      {VARIABLE unit_with_interior.variables.cannon_y_list 0}
      {PLACE_GALLEON_CANNON 5 3}
      {PLACE_GALLEON_CANNON 7 3}
      {PLACE_GALLEON_CANNON 9 3}
      {PLACE_GALLEON_CANNON 11 3}
      {PLACE_GALLEON_CANNON 5 6}
      {PLACE_GALLEON_CANNON 7 6}
      {PLACE_GALLEON_CANNON 9 6}
      {PLACE_GALLEON_CANNON 11 6}

      {VARIABLE unit_with_interior.variables.rigging_x_list 0}
      {VARIABLE unit_with_interior.variables.rigging_y_list 0}
      {PLACE_GALLEON_RIGGING 6 4}
      {PLACE_GALLEON_RIGGING 8 4}
      {PLACE_GALLEON_RIGGING 10 4}

      {PLACE_GALLEON_GANGPLANK 10 2}
      {PLACE_GALLEON_HELM 12 4}

      {PLACE_GALLEON_HOLD   4 3 6   4 4 6   4 5 6}
)}
#enddef

#define PLACE_FRIGATE_SHIP OTHER_ATTRIBUTES
{PLACE_SHIP 50 8 (type=Transport Galleon
level=2
{OTHER_ATTRIBUTES})
({HSHS_FRIGATE_MASK})
(
      {VARIABLE unit_with_interior.variables.cannon_x_list 0}
      {VARIABLE unit_with_interior.variables.cannon_y_list 0}
      {PLACE_GALLEON_CANNON 3 3}
      {PLACE_GALLEON_CANNON 5 3}
      {PLACE_GALLEON_CANNON 7 3}
      {PLACE_GALLEON_CANNON 3 5}
      {PLACE_GALLEON_CANNON 5 5}
      {PLACE_GALLEON_CANNON 7 5}

      {VARIABLE unit_with_interior.variables.rigging_x_list 0}
      {VARIABLE unit_with_interior.variables.rigging_y_list 0}
      {PLACE_GALLEON_RIGGING 3 4}
      {PLACE_GALLEON_RIGGING 5 4}
      {PLACE_GALLEON_RIGGING 7 4}

      {PLACE_GALLEON_GANGPLANK 6 2}
      {PLACE_GALLEON_HELM 9 4}
)}
#enddef

#define PLACE_STANDARD_FLAGSHIP SIDE X Y
{VARIABLE side_var {SIDE}}
{PLACE_GALLEON_SHIP (
side={SIDE}
x={X}
y={Y}
id="Flag Ship {SIDE}"
name=_"Flag Ship $side_var"
overlays=misc/hero-icon.png
[variables]
  rum_current=0
  jewels_current=0
  spices_current=0
[/variables]
)}
#enddef

#define PLACE_INITIAL_FLAGSHIP SIDE X Y
{PLACE_STANDARD_FLAGSHIP {SIDE} {X} {Y}}
[store_unit]
  [filter]
    x={X}
    y={Y}
  [/filter]
  variable=new_ship
[/store_unit]
{GET_XY_FROM_MASK_XY galleon_crew_x galleon_crew_y new_ship.variables.interior_space 7 4}
{THS_CREATE_CREWMAN {SIDE} Ruffian $galleon_crew_x $galleon_crew_y}
{GET_XY_FROM_MASK_XY galleon_crew_x galleon_crew_y new_ship.variables.interior_space 7 5}
{THS_CREATE_CREWMAN {SIDE} Ruffian $galleon_crew_x $galleon_crew_y}
{GET_XY_FROM_MASK_XY galleon_crew_x galleon_crew_y new_ship.variables.interior_space 9 4}
{THS_CREATE_CREWMAN {SIDE} Ruffian $galleon_crew_x $galleon_crew_y}
{GET_XY_FROM_MASK_XY galleon_crew_x galleon_crew_y new_ship.variables.interior_space 9 5}
{THS_CREATE_CREWMAN {SIDE} Ruffian $galleon_crew_x $galleon_crew_y}
{VARIABLE new_ship.variables.rum_current 2}
{VARIABLE new_ship.variables.jewels_current 2}
{VARIABLE new_ship.variables.spices_current 2}
[unstore_unit]
  variable=new_ship
[/unstore_unit]
#enddef

