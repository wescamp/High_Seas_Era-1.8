#define CANNON_ACCEPTABLE_TERRAINS
Ce,Co#enddef
#define HELM_ACCEPTABLE_TERRAINS
Ce,Co#enddef
#define RIGGING_ACCEPTABLE_TERRAINS
Rd#enddef

#define USE_SHIP_FEATURE_MANNING_SYSTEM
#[event]
#name=prestart
#[set_menu_item]
#id=wwiwiwiwi
#description=_"Snow lol"
#[command]
#[terrain]
#x=$x1
#y=$y1
#terrain=Aa
#[/terrain]
#PLACE_HSE_BLACK_FREIGHTER (
#x=$x1
#y=$y1
#side=$side_number)}
#[/command]
#[/set_menu_item]
#[/event]
[event]
name=side turn
first_time_only=no
  {CLEAR_VARIABLE locations_manned_this_turn}

  [store_unit]
    [filter]
      side=$side_number
      [filter_wml]
        [variables]
          did_man_action_this_turn=true
        [/variables]
      [/filter_wml]
    [/filter]
    variable=to_reset
  [/store_unit]
  {FOREACH to_reset usfms_i}
    {VARIABLE to_reset[$usfms_i].variables.did_man_action_this_turn false}
    [unstore_unit]
      variable=to_reset[$usfms_i]
    [/unstore_unit]
  {NEXT usfms_i}

  [store_unit]
    [filter]
      side=$side_number
      {IS_HSE_SHIP}
    [/filter]
    variable=your_ships
  [/store_unit]
  {FOREACH your_ships usfms_i}
    # reset moves, cannons
    {VARIABLE your_ships[$usfms_i].max_moves 1}
    {VARIABLE your_ships[$usfms_i].attack[1].number 0}

    # update helm
    [store_unit]
      [filter]
        x=$your_ships[$usfms_i].variables.helm_x
        y=$your_ships[$usfms_i].variables.helm_y
      [/filter]
      variable=helm_sitter
    [/store_unit]
    {IF_VAR helm_sitter.length greater_than 0 ([then]
      [if]
        [have_location]
          x=$helm_sitter.x
          y=$helm_sitter.y
          terrain={HELM_ACCEPTABLE_TERRAINS}
        [/have_location]
        [then]
          # we're cool, it's a helm
          {IF_VAR helm_sitter.variables.manning_navigate boolean_equals true ([then]
            {VARIABLE_OP your_ships[$usfms_i].max_moves add 2}
          [/then])}
          {IF_VAR helm_sitter.variables.manning_navigate_plus boolean_equals true ([then]
            {VARIABLE_OP your_ships[$usfms_i].max_moves add 4}
          [/then])}
        [/then]
        [else]
          # the helm is dead - unman
          {HSE_UNMAN_ALL helm_sitter}
          # TODO TODO TODO TODO TODO remove the helm (but not here)

          [store_unit]
            [filter]
              x=$helm_sitter.x
              y=$helm_sitter.y
            [/filter]
            variable=helm_sitter
          [/store_unit]
        [/else]
      [/if]
    [/then])}

    # update rigging-manners
    [store_unit]
      [filter]
        x=$your_ships[$usfms_i].variables.rigging_x_list
        y=$your_ships[$usfms_i].variables.rigging_y_list
        [filter_wml]
          [variables]
            manning_rigging=true
          [/variables]
        [/filter_wml]
      [/filter]
      variable=rigging_manners
    [/store_unit]
    {FOREACH rigging_manners usfms_j}
      [if]
        [have_location]
          x=$rigging_manners[$usfms_j].x
          y=$rigging_manners[$usfms_j].y
          terrain={RIGGING_ACCEPTABLE_TERRAINS}
        [/have_location]
        [then]
          # we're cool, it's rigging
          {VARIABLE_OP your_ships[$usfms_i].max_moves add 3}
        [/then]
        [else]
          # the rigging is dead - unman
          {HSE_UNMAN_ALL rigging_manners[$usfms_j]}
          # TODO TODO TODO TODO TODO remove the rigging (but not here)
        [/else]
      [/if]
    {NEXT usfms_j}

    # update cannon-manners
    [store_unit]
      [filter]
        x=$your_ships[$usfms_i].variables.cannon_x_list
        y=$your_ships[$usfms_i].variables.cannon_y_list
        [filter_wml]
          [variables]
            manning_cannon=true
          [/variables]
        [/filter_wml]
      [/filter]
      variable=cannon_manners
    [/store_unit]
    {FOREACH cannon_manners usfms_j}
      [if]
        [have_location]
          x=$cannon_manners[$usfms_j].x
          y=$cannon_manners[$usfms_j].y
          terrain={CANNON_ACCEPTABLE_TERRAINS}
        [/have_location]
        [then]
          # we're cool, it's a cannon
          {VARIABLE_OP your_ships[$usfms_i].attack[1].number add 1}
        [/then]
        [else]
          # the cannon is dead - unman
          {HSE_UNMAN_ALL cannon_manners[$usfms_j]}
          # TODO TODO TODO TODO TODO remove the cannon (but not here)
        [/else]
      [/if]
    {NEXT usfms_j}

    [unstore_unit]
      variable=your_ships[$usfms_i]
    [/unstore_unit]

     # Weird case. Manually remove Skirmisher instead of manually adding it each turn. This is simpler because Skirmisher is binary where the other stats are not.
    {IF_VAR helm_sitter.variables.manning_pilot boolean_equals true ([else] # else
      [object]
        silent=yes
        [filter]
          x=$your_ships[$usfms_i].x
          y=$your_ships[$usfms_i].y
        [/filter]
        [effect]
          apply_to=remove_ability
          [abilities]
            {ABILITY_SKIRMISHER}
          [/abilities]
        [/effect]
      [/object]
    [/else])}
  {NEXT usfms_i}

[/event]

[event]
name=turn refresh
first_time_only=no
  [store_unit]
    [filter]
      side=$side_number
      [filter_wml]
        [variables]
          manning_something=true
        [/variables]
      [/filter_wml]
    [/filter]
    variable=to_immobilize
  [/store_unit]
  {FOREACH to_immobilize usfms_i}
    {VARIABLE to_immobilize[$usfms_i].moves 0}
    {VARIABLE to_immobilize[$usfms_i].attacks_left 0}
    [unstore_unit]
      variable=to_immobilize[$usfms_i]
    [/unstore_unit]
    
    {VARIABLE locations_manned_this_turn $locations_manned_this_turn|+$to_immobilize[$usfms_i].x|,$to_immobilize[$usfms_i].y|}
  {NEXT usfms_i}
[/event]

{MANNING_MENU_ITEMS cannon _"Operate Cannon" _"At Ease" cursors/move_drag.png cannon {CANNON_ACCEPTABLE_TERRAINS} () "misc/cross-white.png" (
  {VARIABLE_OP ship_manned.attack[1].number add 1}
  [unstore_unit]
    variable=ship_manned
  [/unstore_unit]
)}

{MANNING_MENU_ITEMS rigging _"Man The Rigging" _"Return To Deck" cursors/move_drag.png rigging {RIGGING_ACCEPTABLE_TERRAINS} () "flags/flag-icon.png" (
  {VARIABLE_OP ship_manned.moves add 3}
  {VARIABLE_OP ship_manned.max_moves add 3}
  [unstore_unit]
    variable=ship_manned
  [/unstore_unit]
)}

{MANNING_MENU_ITEMS navigate _"Navigate: +2 Moves" _"Stop Navigating" buttons/group_water-active.png helm {HELM_ACCEPTABLE_TERRAINS} (canrecruit=true
[not]
  [filter_wml]
    [variables]
      has_nautical_maps=true
    [/variables]
  [/filter_wml]
[/not]) "misc/dot-white.png" (
  {VARIABLE_OP ship_manned.moves add 2}
  {VARIABLE_OP ship_manned.max_moves add 2}
  [unstore_unit]
    variable=ship_manned
  [/unstore_unit]
)}

{MANNING_MENU_ITEMS navigate_plus _"Navigate: +4 Moves" _"Stop Navigating" buttons/group_water-active.png helm {HELM_ACCEPTABLE_TERRAINS} (canrecruit=true
[filter_wml]
  [variables]
    has_nautical_maps=true
  [/variables]
[/filter_wml]
) "misc/dot-white.png" (
  {VARIABLE_OP ship_manned.moves add 4}
  {VARIABLE_OP ship_manned.max_moves add 4}
  [unstore_unit]
    variable=ship_manned
  [/unstore_unit]
)}

{MANNING_MENU_ITEMS pilot _"Pilot: Skirmisher" _"Stop Piloting" buttons/group_water-active.png helm {HELM_ACCEPTABLE_TERRAINS} (canrecruit=true) "misc/dot-white.png" (
  [object]
    silent=yes
    [filter]
      x=$your_ships[$usfms_i].x
      y=$your_ships[$usfms_i].y
    [/filter]
    [effect]
      apply_to=new_ability
      [abilities]
        {ABILITY_SKIRMISHER}
      [/abilities]
    [/effect]
  [/object]
)}

# Commandeering at the helm
[event]
name=prestart
  [set_menu_item]
    id=hse_commandeer_ship
    description=_"Commandeer the vessel"
    image=cursors/move.png
    
    [show_if]
      [have_unit]
        [not]
          side=$side_number
        [/not]
        [filter_wml]
          [variables]
            is_hse_ship=true
            helm_x=$x1
            helm_y=$y1
          [/variables]
        [/filter_wml]
      [/have_unit]
    [/show_if]

    [filter_location]
      [filter]
        side=$side_number
      [/filter]
    [/filter_location]

    [command]
      [store_unit]
        [filter]
          id=$hex_owner_id_$x1|_$y1|
        [/filter]
        variable=stolen_ship
      [/store_unit]
      {VARIABLE stolen_ship.side $side_number}
      {VARIABLE stolen_ship.moves 0}
      {VARIABLE stolen_ship.attacks_left 0}
      # Only AI ships send boarders automatically
      {VARIABLE stolen_ship.variables.sends_boarders_on_attack false}
      # Enemy units no longer man stuff
      [store_unit]
        [filter]
          x=$stolen_ship.variables.interior_space.hexes_x_list
          y=$stolen_ship.variables.interior_space.hexes_y_list
          [filter_wml]
            [variables]
              manning_something=true
            [/variables]
          [/filter_wml]
        [/filter]
        variable=no_longer_manning_units
      [/store_unit]
      {FOREACH no_longer_manning_units usfms_i}
        {HSE_UNMAN_ALL no_longer_manning_units[$usfms_i|]}
      {NEXT usfms_i}
      [scroll_to]
        x=$stolen_ship.x
        y=$stolen_ship.y
        check_fogged=yes
      [/scroll_to]
      [unstore_unit]
        variable=stolen_ship
        text= _ "Commandeered!"
	red,green,blue=51,153,255
      [/unstore_unit]
    [/command]
  [/set_menu_item]
[/event]
#enddef

#define HSE_UNMAN_ALL UNIT_VAR
{IF_VAR {UNIT_VAR}.variables.manning_something boolean_equals true ([then]
  {VARIABLE {UNIT_VAR}.variables.manning_something false}

  {IF_VAR {UNIT_VAR}.variables.did_man_action_this_turn boolean_equals false ([then]
    # I don't know if this is strictly necessary, but the rules are complicated here so it's better to err on the side of not having bugs or exploits
    {VARIABLE {UNIT_VAR}.variables.did_man_action_this_turn true}
    # With that in place, we can be sure that this is fine (not exploitable at all, since it's the same as unmanning manually)
    {VARIABLE {UNIT_VAR}.moves ${UNIT_VAR}.max_moves}
    {VARIABLE {UNIT_VAR}.attacks_left ${UNIT_VAR}.max_attacks}
  [/then])}
  
  [unstore_unit]
    variable={UNIT_VAR}
  [/unstore_unit]

  [fire_event]
    name=hse_unman_all
    [primary_unit]
      x=${UNIT_VAR}.x
      y=${UNIT_VAR}.y
    [/primary_unit]
  [/fire_event]
[/then])}
#enddef

#define MANNING_MENU_ITEMS TYPE MAN_DESC UNMAN_DESC IMAGE WHAT_IN_HEX TERRAIN_REQUIRED MANNER_FILTER OVERLAY SHIP_MOD_ON
[event]
name=prestart
  [set_menu_item]
    id=hse_man_{TYPE}
    image={IMAGE}
    description={MAN_DESC}
    [show_if]
      [variable]
        name=hex_contains_{WHAT_IN_HEX}_$x1|_$y1
        boolean_equals=true
      [/variable]
      [have_unit]
        side=$side_number
        id=$hex_owner_id_$x1|_$y1
      [/have_unit]
    [/show_if]
    [filter_location]
      terrain={TERRAIN_REQUIRED}
      [filter]
        side=$side_number
        {MANNER_FILTER}
        [not]
          [filter_wml]
            attacks_left=0
          [/filter_wml]
        [/not]
        [not]
          [filter_wml]
            [variables]
              did_man_action_this_turn=true
            [/variables]
          [/filter_wml]
        [/not]
        [not]
          [filter_wml]
            [variables]
              manning_something=true
            [/variables]
          [/filter_wml]
        [/not]
      [/filter]
    [/filter_location]
    [command]
      [store_unit]
        [filter]
          x=$x1
          y=$y1
        [/filter]
        variable=new_manner
      [/store_unit]
      {VARIABLE new_manner.moves 0}
      {VARIABLE new_manner.attacks_left 0}
      {VARIABLE new_manner.variables.manning_something true}
      {VARIABLE new_manner.variables.manning_{TYPE} true}
      {VARIABLE new_manner.variables.did_man_action_this_turn true}
      [unstore_unit]
        variable=new_manner
      [/unstore_unit]
      [unit_overlay]
        x=$x1
        y=$y1
        image={OVERLAY}
      [/unit_overlay]
      [store_unit]
        [filter]
          id=$hex_owner_id_$x1|_$y1
        [/filter]
        variable=ship_manned
      [/store_unit]

      {IF_VAR locations_manned_this_turn contains "$x1|,$y1|" ([else]
        {SHIP_MOD_ON}
      
        {VARIABLE locations_manned_this_turn $locations_manned_this_turn|+$x1|,$y1|}
      [/else])}
    [/command]
  [/set_menu_item]
  [set_menu_item]
    id=hse_unman_{TYPE}
    description={UNMAN_DESC}
    image={IMAGE}
    [filter_location]
      [filter]
        side=$side_number
        [filter_wml]
          [variables]
            manning_{TYPE}=true
          [/variables]
        [/filter_wml]
        [not]
          [filter_wml]
            [variables]
              did_man_action_this_turn=true
            [/variables]
          [/filter_wml]
        [/not]
      [/filter]
    [/filter_location]
    [command]
      [store_unit]
        [filter]
          x=$x1
          y=$y1
        [/filter]
        variable=old_manner
      [/store_unit]
      {VARIABLE old_manner.moves $old_manner.max_moves}
      {VARIABLE old_manner.attacks_left $old_manner.max_attacks}
      {VARIABLE old_manner.variables.manning_something false}
      {VARIABLE old_manner.variables.manning_{TYPE} false}
      {VARIABLE old_manner.variables.did_man_action_this_turn true}
      [unstore_unit]
        variable=old_manner
      [/unstore_unit]
      [remove_unit_overlay]
        x=$x1
        y=$y1
        image={OVERLAY}
      [/remove_unit_overlay]
    [/command]
  [/set_menu_item]
[/event]

[event]
name=hse_unman_all
first_time_only=no
  [store_unit]
    [filter]
      x=$x1
      y=$y1
    [/filter]
    variable=old_manner
  [/store_unit]
  
  {VARIABLE old_manner.variables.manning_{TYPE} false}
  
  [unstore_unit]
    variable=old_manner
  [/unstore_unit]
  [remove_unit_overlay]
    x=$x1
    y=$y1
    image={OVERLAY}
  [/remove_unit_overlay]

[/event]
#enddef

